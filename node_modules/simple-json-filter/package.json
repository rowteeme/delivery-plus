{
  "name": "simple-json-filter",
  "version": "0.3.0",
  "description": "Extremely simple JSON filtering system",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/hash-bang/simpleJSONFilter"
  },
  "keywords": [
    "JSON",
    "filter",
    "filtering",
    "query"
  ],
  "author": {
    "name": "Matt Carter",
    "email": "m@ttcarter.com"
  },
  "license": "MIT",
  "readme": "SimpleJSONFilter\n================\nExtremely simple, yet configurable, JSON filtering system.\n\nThis module provides an object aimed at filtering arrays (or hashes) of hashes.\n\nThe need for it is based on wanting an [ActiveRecord](http://ellislab.com/codeigniter/user-guide/database/active_record.html) like 'where' condition using only JSON arrays-of-hashes or hashes-of-hashes.\n\nIt can be thought of as an extremely dumbed down and easy to understand RegExp group capture operation.\n\n\nExamples\n========\nAssume the following data structure in all examples:\n\n\tvar data = {\n\t\tone: {\n\t\t\tid: 1,\n\t\t\tname: 'Hiro Protagonist',\n\t\t\tage: 27\n\t\t},\n\t\ttwo: {\n\t\t\tid: 2,\n\t\t\tname: 'Y.T.',\n\t\t\tage: 16\n\t\t},\n\t\tthree: {\n\t\t\tid: 3,\n\t\t\tname: 'Raven',\n\t\t\tage: 40,\n\t\t},\n\t\tfour: {\n\t\t\tid: 4,\n\t\t\tname: 'Uncle Enzo',\n\t\t\tage: 80\n\t\t},\n\t\tfive: {\n\t\t\tid: 5,\n\t\t\tname: 'Fisheye',\n\t\t\tage: 50\n\t\t}\n\t};\n\n\nExample of very simple `key=val` filtering\n\n\tvar simpleJSONFilter = require(\"./index.js\");\n\tvar sjf = new simpleJSONFilter();\n\tvar filter = {id: 1};\n\tvar result = sjf.exec(filter, data); // Returns {one: {id: 1,name: 'Hiro Protagonist',age: 27}}\n\nExample of complex filtering with conditionals\n\n\tvar simpleJSONFilter = require(\"./index.js\");\n\tvar sjf = new simpleJSONFilter();\n\tvar filter = {'age > 40'};\n\tvar result = sjf.exec(filter, data); // Returns the keys & values of 'three', 'four' and 'five'\n\nDefinining your own handlers\n\n\tvar simpleJSONFilter = require(\"./index.js\");\n\tvar sjf = new simpleJSONFilter();\n\tsjf.addHandler(/^(.*) ends with$/, function(key, val, data) {\n\t\tvar str = data[key] + '';\n\t\treturn (str.substr(str.length - val.length) == val);\n\t});\n\n\tvar filter = {'age ends with': '0'};\n\tsjf.exec(filter, data), // Returns the keys & values of 'three', 'four' and 'five'\n\nAlternate syntax\n\n\tvar simpleJSONFilter = require(\"./index.js\");\n\tvar sjf = new simpleJSONFilter();\n\tsjf\n\t\t.filter({'age <=': '40'})\n\t\t.data(data)\n\t\t.exec(); // Returns keys & values of 'one', 'two' and 'three'\n\nLimit the number of returned items\n\n\tvar simpleJSONFilter = require(\"./index.js\");\n\tvar sjf = new simpleJSONFilter();\n\tsjf\n\t\t.filter({'age <=': '40'})\n\t\t.data(data)\n\t\t.limit(1)\n\t\t.exec(); // Returns keys & values of 'one' (as it has a limit of one)\n\nLimit the number of returned items & return an array\n\n\tvar simpleJSONFilter = require(\"./index.js\");\n\tvar sjf = new simpleJSONFilter();\n\tsjf\n\t\t.filter({'age <=': '40'})\n\t\t.data(data)\n\t\t.limit(1)\n\t\t.wantArray()\n\t\t.exec(); // Returns a single item array of 'one'\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hash-bang/simpleJSONFilter/issues"
  },
  "homepage": "https://github.com/hash-bang/simpleJSONFilter",
  "_id": "simple-json-filter@0.3.0",
  "dist": {
    "shasum": "73731f56153a946cd60f0a5d534cd79753c4f7e9"
  },
  "_from": "simple-json-filter@*",
  "_resolved": "https://registry.npmjs.org/simple-json-filter/-/simple-json-filter-0.3.0.tgz"
}
